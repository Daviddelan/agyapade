rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // User profiles
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
      
      match /verificationStatus/{type} {
        allow read, write: if isOwner(userId);
      }
    }

    // Documents collection
    match /documents/{documentId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // Activity logs
    match /activityLogs/{logId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if isSignedIn();
    }

    // Keep existing rules for registration process
    match /tempRegistrations/{sessionId} {
      allow read, write: if true;
    }
    
    match /individualRegistrations/{userId} {
      allow read, write: if true;
      
      match /verificationStatus/{type} {
        allow read, write: if true;
      }
    }

    match /loginVerifications/{docId} {
      allow read, write: if request.auth != null;
      allow create: if true;
    }
  }
}

